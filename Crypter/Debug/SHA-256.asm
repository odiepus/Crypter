; Listing generated by Microsoft (R) Optimizing Compiler Version 19.00.23918.0 

	TITLE	c:\Users\odiep\Downloads\2017 01 CS 3843 Project - rev2__StudentFiles\__StudentFiles4Project\SHA-256.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRTD
INCLUDELIB OLDNAMES

PUBLIC	??_C@_03FIKCJHKP@abc?$AA@			; `string'
PUBLIC	??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@ ; `string'
PUBLIC	??_C@_0EB@OKGBMHDA@ba7816bf8f01cfea414140de5dae2223@ ; `string'
PUBLIC	??_C@_0EB@BFFMJNNE@248d6a61d20638b8e5c026930c3e6039@ ; `string'
PUBLIC	??_C@_0EB@OPOECNEJ@cdc76e5c9914fb9281a1c7e284d73e67@ ; `string'
;	COMDAT ??_C@_0EB@OPOECNEJ@cdc76e5c9914fb9281a1c7e284d73e67@
CONST	SEGMENT
??_C@_0EB@OPOECNEJ@cdc76e5c9914fb9281a1c7e284d73e67@ DB 'cdc76e5c9914fb92'
	DB	'81a1c7e284d73e67f1809a48a497200e046d39ccc7112cd0', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@BFFMJNNE@248d6a61d20638b8e5c026930c3e6039@
CONST	SEGMENT
??_C@_0EB@BFFMJNNE@248d6a61d20638b8e5c026930c3e6039@ DB '248d6a61d20638b8'
	DB	'e5c026930c3e6039a33ce45964ff2167f6ecedd419db06c1', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0EB@OKGBMHDA@ba7816bf8f01cfea414140de5dae2223@
CONST	SEGMENT
??_C@_0EB@OKGBMHDA@ba7816bf8f01cfea414140de5dae2223@ DB 'ba7816bf8f01cfea'
	DB	'414140de5dae2223b00361a396177a9cb410ff61f20015ad', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@
CONST	SEGMENT
??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@ DB 'abcdbcdecdefdefg'
	DB	'efghfghighijhijkijkljklmklmnlmnomnopnopq', 00H ; `string'
CONST	ENDS
;	COMDAT ??_C@_03FIKCJHKP@abc?$AA@
CONST	SEGMENT
??_C@_03FIKCJHKP@abc?$AA@ DB 'abc', 00H			; `string'
CONST	ENDS
_DATA	SEGMENT
?msg@@3PAPADA DD FLAT:??_C@_03FIKCJHKP@abc?$AA@		; msg
	DD	FLAT:??_C@_0DJ@NGDOEGCI@abcdbcdecdefdefgefghfghighijhijk@
	DD	00H
?val@@3PAPADA DD FLAT:??_C@_0EB@OKGBMHDA@ba7816bf8f01cfea414140de5dae2223@ ; val
	DD	FLAT:??_C@_0EB@BFFMJNNE@248d6a61d20638b8e5c026930c3e6039@
	DD	FLAT:??_C@_0EB@OPOECNEJ@cdc76e5c9914fb9281a1c7e284d73e67@
?sha256_padding@@3PAEA DB 080H				; sha256_padding
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
	DB	00H
_DATA	ENDS
PUBLIC	?sha256_starts@@YAXPAUsha256_context@@@Z	; sha256_starts
PUBLIC	?sha256_update@@YAXPAUsha256_context@@PAEK@Z	; sha256_update
PUBLIC	?sha256_finish@@YAXPAUsha256_context@@QAE@Z	; sha256_finish
PUBLIC	?sha256_process@@YAXPAUsha256_context@@QAE@Z	; sha256_process
PUBLIC	?sha256@@YAHPAD0KQAE@Z				; sha256
PUBLIC	??_C@_02JDPG@rb?$AA@				; `string'
EXTRN	_memcpy:PROC
EXTRN	_memset:PROC
EXTRN	__imp__fclose:PROC
EXTRN	__imp__fopen:PROC
EXTRN	__imp__fread:PROC
EXTRN	@_RTC_CheckStackVars@8:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__RTC_CheckEsp:PROC
EXTRN	__RTC_InitBase:PROC
EXTRN	__RTC_Shutdown:PROC
EXTRN	__chkstk:PROC
EXTRN	___security_cookie:DWORD
;	COMDAT rtc$TMZ
rtc$TMZ	SEGMENT
__RTC_Shutdown.rtc$TMZ DD FLAT:__RTC_Shutdown
rtc$TMZ	ENDS
;	COMDAT rtc$IMZ
rtc$IMZ	SEGMENT
__RTC_InitBase.rtc$IMZ DD FLAT:__RTC_InitBase
rtc$IMZ	ENDS
;	COMDAT ??_C@_02JDPG@rb?$AA@
CONST	SEGMENT
??_C@_02JDPG@rb?$AA@ DB 'rb', 00H			; `string'
CONST	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\odiep\downloads\2017 01 cs 3843 project - rev2__studentfiles\__studentfiles4project\sha-256.cpp
;	COMDAT ?sha256@@YAHPAD0KQAE@Z
_TEXT	SEGMENT
_totalByteCount$ = -4268				; size = 8
_dataBufferIndex$ = -4252				; size = 4
_numBytesRead$ = -4240					; size = 4
_buffer$ = -4228					; size = 4096
_ctx$ = -124						; size = 104
_fptrIn$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_fileName$ = 8						; size = 4
_dataBuffer$ = 12					; size = 4
_dataLength$ = 16					; size = 4
_sha256sum$ = 20					; size = 4
?sha256@@YAHPAD0KQAE@Z PROC				; sha256, COMDAT

; 293  : {

	push	ebp
	mov	ebp, esp
	mov	eax, 5808				; 000016b0H
	call	__chkstk
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-5808]
	mov	ecx, 1452				; 000005acH
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 294  : 	FILE *fptrIn = NULL;

	mov	DWORD PTR _fptrIn$[ebp], 0

; 295  : 	sha256_context ctx;
; 296  : 	unsigned char buffer[4096];
; 297  : 	DWORD numBytesRead, dataBufferIndex;
; 298  : 	QWORD totalByteCount;
; 299  : 
; 300  : 
; 301  : 	if(fileName != NULL)

	cmp	DWORD PTR _fileName$[ebp], 0
	je	SHORT $LN4@sha256

; 302  : 	{
; 303  : 		fptrIn = fopen(fileName, "rb");

	mov	esi, esp
	push	OFFSET ??_C@_02JDPG@rb?$AA@
	mov	eax, DWORD PTR _fileName$[ebp]
	push	eax
	call	DWORD PTR __imp__fopen
	add	esp, 8
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _fptrIn$[ebp], eax
$LN4@sha256:

; 304  : 	}
; 305  : 
; 306  : 	totalByteCount = 0;

	xorps	xmm0, xmm0
	movlpd	QWORD PTR _totalByteCount$[ebp], xmm0

; 307  : 	dataBufferIndex = 0;

	mov	DWORD PTR _dataBufferIndex$[ebp], 0

; 308  : 
; 309  : 	memset(sha256sum, 0, 32);

	push	32					; 00000020H
	push	0
	mov	eax, DWORD PTR _sha256sum$[ebp]
	push	eax
	call	_memset
	add	esp, 12					; 0000000cH

; 310  : 	sha256_starts( &ctx );

	lea	eax, DWORD PTR _ctx$[ebp]
	push	eax
	call	?sha256_starts@@YAXPAUsha256_context@@@Z ; sha256_starts
	add	esp, 4
$LN2@sha256:

; 311  : 
; 312  : 	while(1)

	mov	eax, 1
	test	eax, eax
	je	$LN3@sha256

; 313  : 	{
; 314  : 		if(fptrIn != NULL)

	cmp	DWORD PTR _fptrIn$[ebp], 0
	je	SHORT $LN5@sha256

; 315  : 		{
; 316  : 			numBytesRead = fread( buffer, 1, sizeof( buffer ), fptrIn );

	mov	esi, esp
	mov	eax, DWORD PTR _fptrIn$[ebp]
	push	eax
	push	4096					; 00001000H
	push	1
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	call	DWORD PTR __imp__fread
	add	esp, 16					; 00000010H
	cmp	esi, esp
	call	__RTC_CheckEsp
	mov	DWORD PTR _numBytesRead$[ebp], eax

; 317  : 			if(numBytesRead == 0) break;

	cmp	DWORD PTR _numBytesRead$[ebp], 0
	jne	SHORT $LN7@sha256
	jmp	$LN3@sha256
$LN7@sha256:

; 318  : 		}
; 319  : 		else

	jmp	SHORT $LN6@sha256
$LN5@sha256:

; 320  : 		{
; 321  : 			if(dataBufferIndex >= dataLength) break;

	mov	eax, DWORD PTR _dataBufferIndex$[ebp]
	cmp	eax, DWORD PTR _dataLength$[ebp]
	jb	SHORT $LN8@sha256
	jmp	$LN3@sha256
$LN8@sha256:

; 322  : 
; 323  : 			numBytesRead = dataLength - dataBufferIndex;

	mov	eax, DWORD PTR _dataLength$[ebp]
	sub	eax, DWORD PTR _dataBufferIndex$[ebp]
	mov	DWORD PTR _numBytesRead$[ebp], eax

; 324  : 			if(numBytesRead >  sizeof(buffer) ) numBytesRead = sizeof(buffer);

	cmp	DWORD PTR _numBytesRead$[ebp], 4096	; 00001000H
	jbe	SHORT $LN9@sha256
	mov	DWORD PTR _numBytesRead$[ebp], 4096	; 00001000H
$LN9@sha256:

; 325  : 
; 326  : 			memcpy(buffer, &dataBuffer[dataBufferIndex], numBytesRead );

	mov	eax, DWORD PTR _numBytesRead$[ebp]
	push	eax
	mov	ecx, DWORD PTR _dataBuffer$[ebp]
	add	ecx, DWORD PTR _dataBufferIndex$[ebp]
	push	ecx
	lea	edx, DWORD PTR _buffer$[ebp]
	push	edx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 327  : 			dataBufferIndex += numBytesRead;

	mov	eax, DWORD PTR _dataBufferIndex$[ebp]
	add	eax, DWORD PTR _numBytesRead$[ebp]
	mov	DWORD PTR _dataBufferIndex$[ebp], eax
$LN6@sha256:

; 328  : 		}
; 329  : 		totalByteCount += numBytesRead;

	mov	eax, DWORD PTR _numBytesRead$[ebp]
	xor	ecx, ecx
	add	eax, DWORD PTR _totalByteCount$[ebp]
	adc	ecx, DWORD PTR _totalByteCount$[ebp+4]
	mov	DWORD PTR _totalByteCount$[ebp], eax
	mov	DWORD PTR _totalByteCount$[ebp+4], ecx

; 330  : 
; 331  : 		sha256_update( &ctx, buffer, numBytesRead );

	mov	eax, DWORD PTR _numBytesRead$[ebp]
	push	eax
	lea	ecx, DWORD PTR _buffer$[ebp]
	push	ecx
	lea	edx, DWORD PTR _ctx$[ebp]
	push	edx
	call	?sha256_update@@YAXPAUsha256_context@@PAEK@Z ; sha256_update
	add	esp, 12					; 0000000cH

; 332  : 	}

	jmp	$LN2@sha256
$LN3@sha256:

; 333  : 	sha256_finish( &ctx, sha256sum );

	mov	eax, DWORD PTR _sha256sum$[ebp]
	push	eax
	lea	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	?sha256_finish@@YAXPAUsha256_context@@QAE@Z ; sha256_finish
	add	esp, 8

; 334  : 
; 335  : 	if(fptrIn != NULL) fclose(fptrIn);

	cmp	DWORD PTR _fptrIn$[ebp], 0
	je	SHORT $LN10@sha256
	mov	esi, esp
	mov	eax, DWORD PTR _fptrIn$[ebp]
	push	eax
	call	DWORD PTR __imp__fclose
	add	esp, 4
	cmp	esi, esp
	call	__RTC_CheckEsp
$LN10@sha256:

; 336  : 	return 0;

	xor	eax, eax

; 337  : } // sha256

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN15@sha256
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 5808				; 000016b0H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
$LN15@sha256:
	DD	2
	DD	$LN14@sha256
$LN14@sha256:
	DD	-124					; ffffff84H
	DD	104					; 00000068H
	DD	$LN12@sha256
	DD	-4228					; ffffef7cH
	DD	4096					; 00001000H
	DD	$LN13@sha256
$LN13@sha256:
	DB	98					; 00000062H
	DB	117					; 00000075H
	DB	102					; 00000066H
	DB	102					; 00000066H
	DB	101					; 00000065H
	DB	114					; 00000072H
	DB	0
$LN12@sha256:
	DB	99					; 00000063H
	DB	116					; 00000074H
	DB	120					; 00000078H
	DB	0
?sha256@@YAHPAD0KQAE@Z ENDP				; sha256
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\odiep\downloads\2017 01 cs 3843 project - rev2__studentfiles\__studentfiles4project\sha-256.cpp
;	COMDAT ?sha256_process@@YAXPAUsha256_context@@QAE@Z
_TEXT	SEGMENT
tv5012 = -584						; size = 4
tv4929 = -584						; size = 4
tv4846 = -584						; size = 4
tv4763 = -584						; size = 4
tv4680 = -584						; size = 4
tv4597 = -584						; size = 4
tv4514 = -584						; size = 4
tv4431 = -584						; size = 4
tv4348 = -584						; size = 4
tv4265 = -584						; size = 4
tv4182 = -584						; size = 4
tv4099 = -584						; size = 4
tv4016 = -584						; size = 4
tv3933 = -584						; size = 4
tv3850 = -584						; size = 4
tv3767 = -584						; size = 4
tv3684 = -584						; size = 4
tv3601 = -584						; size = 4
tv3518 = -584						; size = 4
tv3435 = -584						; size = 4
tv3352 = -584						; size = 4
tv3269 = -584						; size = 4
tv3186 = -584						; size = 4
tv3103 = -584						; size = 4
tv3020 = -584						; size = 4
tv2937 = -584						; size = 4
tv2854 = -584						; size = 4
tv2771 = -584						; size = 4
tv2688 = -584						; size = 4
tv2605 = -584						; size = 4
tv2522 = -584						; size = 4
tv2439 = -584						; size = 4
tv2356 = -584						; size = 4
tv2273 = -584						; size = 4
tv2190 = -584						; size = 4
tv2107 = -584						; size = 4
tv2024 = -584						; size = 4
tv1941 = -584						; size = 4
tv1858 = -584						; size = 4
tv1775 = -584						; size = 4
tv1692 = -584						; size = 4
tv1609 = -584						; size = 4
tv1526 = -584						; size = 4
tv1443 = -584						; size = 4
tv1360 = -584						; size = 4
tv1277 = -584						; size = 4
tv1194 = -584						; size = 4
tv1111 = -584						; size = 4
_H$ = -384						; size = 4
_G$ = -372						; size = 4
_F$ = -360						; size = 4
_E$ = -348						; size = 4
_D$ = -336						; size = 4
_C$ = -324						; size = 4
_B$ = -312						; size = 4
_A$ = -300						; size = 4
_W$ = -288						; size = 256
_temp2$ = -24						; size = 4
_temp1$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_data$ = 12						; size = 4
?sha256_process@@YAXPAUsha256_context@@QAE@Z PROC	; sha256_process, COMDAT

; 59   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 584				; 00000248H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-584]
	mov	ecx, 146				; 00000092H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 60   :     uint32 temp1, temp2, W[64];
; 61   :     uint32 A, B, C, D, E, F, G, H;
; 62   : 
; 63   :     GET_UINT32( W[0],  data,  0 );

	mov	eax, 1
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [edx+ecx]
	shl	ecx, 16					; 00000010H
	or	eax, ecx
	mov	edx, 1
	shl	edx, 1
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 3
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	DWORD PTR _W$[ebp+edx], eax

; 64   :     GET_UINT32( W[1],  data,  4 );

	mov	eax, 1
	shl	eax, 2
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	shl	edx, 24					; 00000018H
	mov	eax, 1
	imul	ecx, eax, 5
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 6
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 7
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	or	edx, ecx
	mov	eax, 4
	shl	eax, 0
	mov	DWORD PTR _W$[ebp+eax], edx

; 65   :     GET_UINT32( W[2],  data,  8 );

	mov	eax, 1
	shl	eax, 3
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	shl	edx, 24					; 00000018H
	mov	eax, 1
	imul	ecx, eax, 9
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 10
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 11
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	or	edx, ecx
	mov	eax, 4
	shl	eax, 1
	mov	DWORD PTR _W$[ebp+eax], edx

; 66   :     GET_UINT32( W[3],  data, 12 );

	mov	eax, 1
	imul	ecx, eax, 12
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 13
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 14
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 15
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	DWORD PTR _W$[ebp+edx], eax

; 67   :     GET_UINT32( W[4],  data, 16 );

	mov	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	shl	edx, 24					; 00000018H
	mov	eax, 1
	imul	ecx, eax, 17
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 18
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 19
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	or	edx, ecx
	mov	eax, 4
	shl	eax, 2
	mov	DWORD PTR _W$[ebp+eax], edx

; 68   :     GET_UINT32( W[5],  data, 20 );

	mov	eax, 1
	imul	ecx, eax, 20
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 21
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 22
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 23
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	DWORD PTR _W$[ebp+edx], eax

; 69   :     GET_UINT32( W[6],  data, 24 );

	mov	eax, 1
	imul	ecx, eax, 24
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 25
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 26
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 27
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	DWORD PTR _W$[ebp+edx], eax

; 70   :     GET_UINT32( W[7],  data, 28 );

	mov	eax, 1
	imul	ecx, eax, 28
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 29
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 30
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 31
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	DWORD PTR _W$[ebp+edx], eax

; 71   :     GET_UINT32( W[8],  data, 32 );

	mov	eax, 1
	shl	eax, 5
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+eax]
	shl	edx, 24					; 00000018H
	mov	eax, 1
	imul	ecx, eax, 33
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	shl	ecx, 16					; 00000010H
	or	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 34
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	shl	ecx, 8
	or	edx, ecx
	mov	eax, 1
	imul	ecx, eax, 35
	mov	eax, DWORD PTR _data$[ebp]
	movzx	ecx, BYTE PTR [eax+ecx]
	or	edx, ecx
	mov	eax, 4
	shl	eax, 3
	mov	DWORD PTR _W$[ebp+eax], edx

; 72   :     GET_UINT32( W[9],  data, 36 );

	mov	eax, 1
	imul	ecx, eax, 36
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 37
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 38
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 39
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 9
	mov	DWORD PTR _W$[ebp+edx], eax

; 73   :     GET_UINT32( W[10], data, 40 );

	mov	eax, 1
	imul	ecx, eax, 40
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 41
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 42
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 43
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 10
	mov	DWORD PTR _W$[ebp+edx], eax

; 74   :     GET_UINT32( W[11], data, 44 );

	mov	eax, 1
	imul	ecx, eax, 44
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 45
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 46
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 47
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 11
	mov	DWORD PTR _W$[ebp+edx], eax

; 75   :     GET_UINT32( W[12], data, 48 );

	mov	eax, 1
	imul	ecx, eax, 48
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 49
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 50
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 51
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 12
	mov	DWORD PTR _W$[ebp+edx], eax

; 76   :     GET_UINT32( W[13], data, 52 );

	mov	eax, 1
	imul	ecx, eax, 52
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 53
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 54
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 55
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 13
	mov	DWORD PTR _W$[ebp+edx], eax

; 77   :     GET_UINT32( W[14], data, 56 );

	mov	eax, 1
	imul	ecx, eax, 56
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 57
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 58
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 59
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 14
	mov	DWORD PTR _W$[ebp+edx], eax

; 78   :     GET_UINT32( W[15], data, 60 );

	mov	eax, 1
	imul	ecx, eax, 60
	mov	edx, DWORD PTR _data$[ebp]
	movzx	eax, BYTE PTR [edx+ecx]
	shl	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 61
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 16					; 00000010H
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 62
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	shl	edx, 8
	or	eax, edx
	mov	ecx, 1
	imul	edx, ecx, 63
	mov	ecx, DWORD PTR _data$[ebp]
	movzx	edx, BYTE PTR [ecx+edx]
	or	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 15
	mov	DWORD PTR _W$[ebp+edx], eax

; 79   : 
; 80   : #define  SHR(x,n) ((x & 0xFFFFFFFF) >> n)
; 81   : #define ROTR(x,n) (SHR(x,n) | (x << (32 - n)))
; 82   : 
; 83   : #define S0(x) (ROTR(x, 7) ^ ROTR(x,18) ^  SHR(x, 3))
; 84   : #define S1(x) (ROTR(x,17) ^ ROTR(x,19) ^  SHR(x,10))
; 85   : 
; 86   : #define S2(x) (ROTR(x, 2) ^ ROTR(x,13) ^ ROTR(x,22))
; 87   : #define S3(x) (ROTR(x, 6) ^ ROTR(x,11) ^ ROTR(x,25))
; 88   : 
; 89   : #define F0(x,y,z) ((x & y) | (z & (x | y)))
; 90   : #define F1(x,y,z) (z ^ (x & (y ^ z)))
; 91   : 
; 92   : #define R(t)                                    \
; 93   : (                                               \
; 94   :     W[t] = S1(W[t -  2]) + W[t -  7] +          \
; 95   :            S0(W[t - 15]) + W[t - 16]            \
; 96   : )
; 97   : 
; 98   : #define P(a,b,c,d,e,f,g,h,x,K)                  \
; 99   : {                                               \
; 100  :     temp1 = h + S3(e) + F1(e,f,g) + K + x;      \
; 101  :     temp2 = S2(a) + F0(a,b,c);                  \
; 102  :     d += temp1; h = temp1 + temp2;              \
; 103  : }
; 104  : 
; 105  :     A = ctx->state[0];

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	mov	DWORD PTR _A$[ebp], eax

; 106  :     B = ctx->state[1];

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	mov	DWORD PTR _B$[ebp], edx

; 107  :     C = ctx->state[2];

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	mov	DWORD PTR _C$[ebp], edx

; 108  :     D = ctx->state[3];

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	mov	DWORD PTR _D$[ebp], eax

; 109  :     E = ctx->state[4];

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	mov	DWORD PTR _E$[ebp], edx

; 110  :     F = ctx->state[5];

	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	mov	DWORD PTR _F$[ebp], eax

; 111  :     G = ctx->state[6];

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	mov	DWORD PTR _G$[ebp], eax

; 112  :     H = ctx->state[7];

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	mov	DWORD PTR _H$[ebp], eax

; 113  : 
; 114  :     P( A, B, C, D, E, F, G, H, W[ 0], 0x428A2F98 );

	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _H$[ebp]
	mov	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _G$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx+1116352408]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	mov	ecx, DWORD PTR _A$[ebp]
	or	ecx, DWORD PTR _B$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _D$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _D$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _H$[ebp], eax

; 115  :     P( H, A, B, C, D, E, F, G, W[ 1], 0x71374491 );

	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _G$[ebp]
	mov	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	add	eax, edx
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _W$[ebp+ecx]
	lea	eax, DWORD PTR [eax+edx+1899447441]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	mov	ecx, DWORD PTR _H$[ebp]
	or	ecx, DWORD PTR _A$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _C$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _C$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _G$[ebp], eax

; 116  :     P( G, H, A, B, C, D, E, F, W[ 2], 0xB5C0FBCF );

	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _F$[ebp]
	mov	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	add	eax, edx
	mov	ecx, 4
	shl	ecx, 1
	mov	edx, DWORD PTR _W$[ebp+ecx]
	lea	eax, DWORD PTR [eax+edx-1245643825]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	mov	ecx, DWORD PTR _G$[ebp]
	or	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _B$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _F$[ebp], eax

; 117  :     P( F, G, H, A, B, C, D, E, W[ 3], 0xE9B5DBA5 );

	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _E$[ebp]
	mov	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx-373957723]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _F$[ebp]
	or	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _H$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _A$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _E$[ebp], eax

; 118  :     P( E, F, G, H, A, B, C, D, W[ 4], 0x3956C25B );

	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _D$[ebp]
	mov	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	add	eax, edx
	mov	ecx, 4
	shl	ecx, 2
	mov	edx, DWORD PTR _W$[ebp+ecx]
	lea	eax, DWORD PTR [eax+edx+961987163]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	or	ecx, DWORD PTR _F$[ebp]
	and	ecx, DWORD PTR _G$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _H$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _D$[ebp], eax

; 119  :     P( D, E, F, G, H, A, B, C, W[ 5], 0x59F111F1 );

	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _C$[ebp]
	mov	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx+1508970993]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _D$[ebp]
	or	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _G$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _C$[ebp], eax

; 120  :     P( C, D, E, F, G, H, A, B, W[ 6], 0x923F82A4 );

	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _B$[ebp]
	mov	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx-1841331548]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	or	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _F$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _B$[ebp], eax

; 121  :     P( B, C, D, E, F, G, H, A, W[ 7], 0xAB1C5ED5 );

	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _A$[ebp]
	mov	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx-1424204075]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	mov	ecx, DWORD PTR _B$[ebp]
	or	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _D$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _E$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _A$[ebp], eax

; 122  :     P( A, B, C, D, E, F, G, H, W[ 8], 0xD807AA98 );

	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _H$[ebp]
	mov	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _G$[ebp]
	add	eax, edx
	mov	ecx, 4
	shl	ecx, 3
	mov	edx, DWORD PTR _W$[ebp+ecx]
	lea	eax, DWORD PTR [eax+edx-670586216]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	mov	ecx, DWORD PTR _A$[ebp]
	or	ecx, DWORD PTR _B$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _D$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _D$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _H$[ebp], eax

; 123  :     P( H, A, B, C, D, E, F, G, W[ 9], 0x12835B01 );

	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _G$[ebp]
	mov	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 9
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx+310598401]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	mov	ecx, DWORD PTR _H$[ebp]
	or	ecx, DWORD PTR _A$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _C$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _C$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _G$[ebp], eax

; 124  :     P( G, H, A, B, C, D, E, F, W[10], 0x243185BE );

	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _F$[ebp]
	mov	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 10
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx+607225278]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	mov	ecx, DWORD PTR _G$[ebp]
	or	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _B$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _F$[ebp], eax

; 125  :     P( F, G, H, A, B, C, D, E, W[11], 0x550C7DC3 );

	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _E$[ebp]
	mov	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 11
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx+1426881987]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _F$[ebp]
	or	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _H$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _A$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _E$[ebp], eax

; 126  :     P( E, F, G, H, A, B, C, D, W[12], 0x72BE5D74 );

	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _D$[ebp]
	mov	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 12
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx+1925078388]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	or	ecx, DWORD PTR _F$[ebp]
	and	ecx, DWORD PTR _G$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _H$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _D$[ebp], eax

; 127  :     P( D, E, F, G, H, A, B, C, W[13], 0x80DEB1FE );

	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _C$[ebp]
	mov	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 13
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx-2132889090]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _D$[ebp]
	or	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _G$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _C$[ebp], eax

; 128  :     P( C, D, E, F, G, H, A, B, W[14], 0x9BDC06A7 );

	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _B$[ebp]
	mov	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 14
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx-1680079193]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	or	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _F$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _B$[ebp], eax

; 129  :     P( B, C, D, E, F, G, H, A, W[15], 0xC19BF174 );

	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 6
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 26					; 0000001aH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 11					; 0000000bH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 21					; 00000015H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 25					; 00000019H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 7
	or	edx, ecx
	xor	eax, edx
	add	eax, DWORD PTR _A$[ebp]
	mov	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	add	eax, edx
	mov	ecx, 4
	imul	edx, ecx, 15
	mov	ecx, DWORD PTR _W$[ebp+edx]
	lea	edx, DWORD PTR [eax+ecx-1046744716]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	mov	ecx, DWORD PTR _B$[ebp]
	or	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _D$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _E$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _A$[ebp], eax

; 130  :     P( A, B, C, D, E, F, G, H, R(16), 0xE49B69C1 );

	mov	eax, 4
	imul	ecx, eax, 14
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 14
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 14
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 14
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 14
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 9
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 7
	mov	eax, 4
	shl	eax, 0
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 25					; 00000019H
	or	ecx, eax
	mov	eax, 4
	shl	eax, 0
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 18					; 00000012H
	mov	esi, 4
	shl	esi, 0
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	eax, esi
	xor	ecx, eax
	mov	eax, 4
	shl	eax, 0
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 3
	xor	ecx, eax
	add	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 0
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv1111[ebp], edx
	mov	ecx, 4
	shl	ecx, 4
	mov	edx, DWORD PTR tv1111[ebp]
	mov	DWORD PTR _W$[ebp+ecx], edx
	mov	eax, DWORD PTR _F$[ebp]
	xor	eax, DWORD PTR _G$[ebp]
	and	eax, DWORD PTR _E$[ebp]
	xor	eax, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 7
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 25					; 00000019H
	or	edx, ecx
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 21					; 00000015H
	mov	esi, DWORD PTR _E$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, ecx
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 26					; 0000001aH
	mov	edi, DWORD PTR _E$[ebp]
	shr	edi, 6
	or	edi, ecx
	xor	edi, esi
	xor	edi, edx
	add	edi, DWORD PTR _H$[ebp]
	add	edi, DWORD PTR tv1111[ebp]
	lea	edx, DWORD PTR [eax+edi-459576895]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	mov	ecx, DWORD PTR _A$[ebp]
	or	ecx, DWORD PTR _B$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _D$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _D$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _H$[ebp], eax

; 131  :     P( H, A, B, C, D, E, F, G, R(17), 0xEFBE4786 );

	mov	eax, 4
	imul	ecx, eax, 15
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 15
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 15
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 15
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 15
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 10
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 7
	mov	eax, 4
	shl	eax, 1
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 25					; 00000019H
	or	ecx, eax
	mov	eax, 4
	shl	eax, 1
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 18					; 00000012H
	mov	esi, 4
	shl	esi, 1
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	eax, esi
	xor	ecx, eax
	mov	eax, 4
	shl	eax, 1
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 3
	xor	ecx, eax
	add	edx, ecx
	mov	ecx, 4
	shl	ecx, 0
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv1194[ebp], edx
	mov	edx, 4
	imul	eax, edx, 17
	mov	ecx, DWORD PTR tv1194[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _D$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _D$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _D$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _G$[ebp]
	add	edi, DWORD PTR tv1194[ebp]
	lea	ecx, DWORD PTR [edx+edi-272742522]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	mov	ecx, DWORD PTR _H$[ebp]
	or	ecx, DWORD PTR _A$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _C$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _C$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _G$[ebp], eax

; 132  :     P( G, H, A, B, C, D, E, F, R(18), 0x0FC19DC6 );

	mov	eax, 4
	shl	eax, 4
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 17					; 00000011H
	mov	edx, 4
	shl	edx, 4
	mov	eax, DWORD PTR _W$[ebp+edx]
	shl	eax, 15					; 0000000fH
	or	ecx, eax
	mov	edx, 4
	shl	edx, 4
	mov	eax, DWORD PTR _W$[ebp+edx]
	shr	eax, 19					; 00000013H
	mov	edx, 4
	shl	edx, 4
	mov	edx, DWORD PTR _W$[ebp+edx]
	shl	edx, 13					; 0000000dH
	or	eax, edx
	xor	ecx, eax
	mov	eax, 4
	shl	eax, 4
	mov	edx, DWORD PTR _W$[ebp+eax]
	shr	edx, 10					; 0000000aH
	xor	ecx, edx
	mov	eax, 4
	imul	edx, eax, 11
	add	ecx, DWORD PTR _W$[ebp+edx]
	mov	eax, 4
	imul	edx, eax, 3
	mov	eax, DWORD PTR _W$[ebp+edx]
	shr	eax, 7
	mov	edx, 4
	imul	edx, edx, 3
	mov	edx, DWORD PTR _W$[ebp+edx]
	shl	edx, 25					; 00000019H
	or	eax, edx
	mov	edx, 4
	imul	edx, edx, 3
	mov	edx, DWORD PTR _W$[ebp+edx]
	shr	edx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 3
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	edx, esi
	xor	eax, edx
	mov	edx, 4
	imul	edx, edx, 3
	mov	edx, DWORD PTR _W$[ebp+edx]
	shr	edx, 3
	xor	eax, edx
	add	ecx, eax
	mov	eax, 4
	shl	eax, 1
	add	ecx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv1277[ebp], ecx
	mov	ecx, 4
	imul	edx, ecx, 18
	mov	eax, DWORD PTR tv1277[ebp]
	mov	DWORD PTR _W$[ebp+edx], eax
	mov	ecx, DWORD PTR _D$[ebp]
	xor	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	xor	ecx, DWORD PTR _E$[ebp]
	mov	edx, DWORD PTR _C$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 25					; 00000019H
	or	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shl	edx, 21					; 00000015H
	mov	esi, DWORD PTR _C$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, edx
	mov	edx, DWORD PTR _C$[ebp]
	shl	edx, 26					; 0000001aH
	mov	edi, DWORD PTR _C$[ebp]
	shr	edi, 6
	or	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _F$[ebp]
	add	edi, DWORD PTR tv1277[ebp]
	lea	eax, DWORD PTR [ecx+edi+264347078]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	mov	ecx, DWORD PTR _G$[ebp]
	or	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _B$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _F$[ebp], eax

; 133  :     P( F, G, H, A, B, C, D, E, R(19), 0x240CA1CC );

	mov	eax, 4
	imul	ecx, eax, 17
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 17
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 17
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 17
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 17
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 12
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 7
	mov	eax, 4
	shl	eax, 2
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 25					; 00000019H
	or	ecx, eax
	mov	eax, 4
	shl	eax, 2
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 18					; 00000012H
	mov	esi, 4
	shl	esi, 2
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	eax, esi
	xor	ecx, eax
	mov	eax, 4
	shl	eax, 2
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 3
	xor	ecx, eax
	add	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 3
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv1360[ebp], edx
	mov	ecx, 4
	imul	edx, ecx, 19
	mov	eax, DWORD PTR tv1360[ebp]
	mov	DWORD PTR _W$[ebp+edx], eax
	mov	ecx, DWORD PTR _C$[ebp]
	xor	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	xor	ecx, DWORD PTR _D$[ebp]
	mov	edx, DWORD PTR _B$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 25					; 00000019H
	or	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shl	edx, 21					; 00000015H
	mov	esi, DWORD PTR _B$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, edx
	mov	edx, DWORD PTR _B$[ebp]
	shl	edx, 26					; 0000001aH
	mov	edi, DWORD PTR _B$[ebp]
	shr	edi, 6
	or	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _E$[ebp]
	add	edi, DWORD PTR tv1360[ebp]
	lea	eax, DWORD PTR [ecx+edi+604807628]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _F$[ebp]
	or	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _H$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _A$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _E$[ebp], eax

; 134  :     P( E, F, G, H, A, B, C, D, R(20), 0x2DE92C6F );

	mov	eax, 4
	imul	ecx, eax, 18
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 18
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 18
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 18
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 18
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 13
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 5
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 5
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 5
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 5
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 5
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	shl	eax, 2
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv1443[ebp], edx
	mov	ecx, 4
	imul	edx, ecx, 20
	mov	eax, DWORD PTR tv1443[ebp]
	mov	DWORD PTR _W$[ebp+edx], eax
	mov	ecx, DWORD PTR _B$[ebp]
	xor	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	xor	ecx, DWORD PTR _C$[ebp]
	mov	edx, DWORD PTR _A$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 25					; 00000019H
	or	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shl	edx, 21					; 00000015H
	mov	esi, DWORD PTR _A$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, edx
	mov	edx, DWORD PTR _A$[ebp]
	shl	edx, 26					; 0000001aH
	mov	edi, DWORD PTR _A$[ebp]
	shr	edi, 6
	or	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _D$[ebp]
	add	edi, DWORD PTR tv1443[ebp]
	lea	eax, DWORD PTR [ecx+edi+770255983]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	or	ecx, DWORD PTR _F$[ebp]
	and	ecx, DWORD PTR _G$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _H$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _D$[ebp], eax

; 135  :     P( D, E, F, G, H, A, B, C, R(21), 0x4A7484AA );

	mov	eax, 4
	imul	ecx, eax, 19
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 19
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 19
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 19
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 19
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 14
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 6
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 6
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 6
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 6
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 6
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 5
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv1526[ebp], edx
	mov	edx, 4
	imul	eax, edx, 21
	mov	ecx, DWORD PTR tv1526[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _H$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _H$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _H$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _C$[ebp]
	add	edi, DWORD PTR tv1526[ebp]
	lea	ecx, DWORD PTR [edx+edi+1249150122]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _D$[ebp]
	or	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _G$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _C$[ebp], eax

; 136  :     P( C, D, E, F, G, H, A, B, R(22), 0x5CB0A9DC );

	mov	eax, 4
	imul	ecx, eax, 20
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 20
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 20
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 20
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 20
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 15
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 7
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 7
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 7
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 7
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 7
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 6
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv1609[ebp], edx
	mov	edx, 4
	imul	eax, edx, 22
	mov	ecx, DWORD PTR tv1609[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _G$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _G$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _G$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _B$[ebp]
	add	edi, DWORD PTR tv1609[ebp]
	lea	ecx, DWORD PTR [edx+edi+1555081692]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	or	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _F$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _B$[ebp], eax

; 137  :     P( B, C, D, E, F, G, H, A, R(23), 0x76F988DA );

	mov	eax, 4
	imul	ecx, eax, 21
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 21
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 21
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 21
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 21
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	shl	eax, 4
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	ecx, 4
	shl	ecx, 3
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	shl	ecx, 3
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	shl	ecx, 3
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	shl	esi, 3
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	shl	ecx, 3
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 7
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv1692[ebp], edx
	mov	edx, 4
	imul	eax, edx, 23
	mov	ecx, DWORD PTR tv1692[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _F$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _F$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _F$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _A$[ebp]
	add	edi, DWORD PTR tv1692[ebp]
	lea	ecx, DWORD PTR [edx+edi+1996064986]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	mov	ecx, DWORD PTR _B$[ebp]
	or	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _D$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _E$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _A$[ebp], eax

; 138  :     P( A, B, C, D, E, F, G, H, R(24), 0x983E5152 );

	mov	eax, 4
	imul	ecx, eax, 22
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 22
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 22
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 22
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 22
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 17
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 9
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 9
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 9
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 9
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 9
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	shl	eax, 3
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv1775[ebp], edx
	mov	ecx, 4
	imul	edx, ecx, 24
	mov	eax, DWORD PTR tv1775[ebp]
	mov	DWORD PTR _W$[ebp+edx], eax
	mov	ecx, DWORD PTR _F$[ebp]
	xor	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	xor	ecx, DWORD PTR _G$[ebp]
	mov	edx, DWORD PTR _E$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 25					; 00000019H
	or	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shl	edx, 21					; 00000015H
	mov	esi, DWORD PTR _E$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, edx
	mov	edx, DWORD PTR _E$[ebp]
	shl	edx, 26					; 0000001aH
	mov	edi, DWORD PTR _E$[ebp]
	shr	edi, 6
	or	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _H$[ebp]
	add	edi, DWORD PTR tv1775[ebp]
	lea	eax, DWORD PTR [ecx+edi-1740746414]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	mov	ecx, DWORD PTR _A$[ebp]
	or	ecx, DWORD PTR _B$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _D$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _D$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _H$[ebp], eax

; 139  :     P( H, A, B, C, D, E, F, G, R(25), 0xA831C66D );

	mov	eax, 4
	imul	ecx, eax, 23
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 23
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 23
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 23
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 23
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 18
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 10
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 10
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 10
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 10
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 10
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 9
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv1858[ebp], edx
	mov	edx, 4
	imul	eax, edx, 25
	mov	ecx, DWORD PTR tv1858[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _D$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _D$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _D$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _G$[ebp]
	add	edi, DWORD PTR tv1858[ebp]
	lea	ecx, DWORD PTR [edx+edi-1473132947]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	mov	ecx, DWORD PTR _H$[ebp]
	or	ecx, DWORD PTR _A$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _C$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _C$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _G$[ebp], eax

; 140  :     P( G, H, A, B, C, D, E, F, R(26), 0xB00327C8 );

	mov	eax, 4
	imul	ecx, eax, 24
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 24
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 24
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 24
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 24
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 19
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 11
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 11
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 11
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 11
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 11
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 10
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv1941[ebp], edx
	mov	edx, 4
	imul	eax, edx, 26
	mov	ecx, DWORD PTR tv1941[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _C$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _C$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _C$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _F$[ebp]
	add	edi, DWORD PTR tv1941[ebp]
	lea	ecx, DWORD PTR [edx+edi-1341970488]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	mov	ecx, DWORD PTR _G$[ebp]
	or	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _B$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _F$[ebp], eax

; 141  :     P( F, G, H, A, B, C, D, E, R(27), 0xBF597FC7 );

	mov	eax, 4
	imul	ecx, eax, 25
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 25
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 25
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 25
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 25
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 20
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 12
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 12
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 12
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 12
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 12
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 11
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2024[ebp], edx
	mov	edx, 4
	imul	eax, edx, 27
	mov	ecx, DWORD PTR tv2024[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _B$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _B$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _B$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _E$[ebp]
	add	edi, DWORD PTR tv2024[ebp]
	lea	ecx, DWORD PTR [edx+edi-1084653625]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _F$[ebp]
	or	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _H$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _A$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _E$[ebp], eax

; 142  :     P( E, F, G, H, A, B, C, D, R(28), 0xC6E00BF3 );

	mov	eax, 4
	imul	ecx, eax, 26
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 26
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 26
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 26
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 26
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 21
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 13
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 13
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 13
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 13
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 13
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 12
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2107[ebp], edx
	mov	edx, 4
	imul	eax, edx, 28
	mov	ecx, DWORD PTR tv2107[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _A$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _A$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _A$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _D$[ebp]
	add	edi, DWORD PTR tv2107[ebp]
	lea	ecx, DWORD PTR [edx+edi-958395405]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	or	ecx, DWORD PTR _F$[ebp]
	and	ecx, DWORD PTR _G$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _H$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _D$[ebp], eax

; 143  :     P( D, E, F, G, H, A, B, C, R(29), 0xD5A79147 );

	mov	eax, 4
	imul	ecx, eax, 27
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 27
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 27
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 27
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 27
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 22
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 14
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 14
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 14
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 14
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 14
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 13
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2190[ebp], edx
	mov	edx, 4
	imul	eax, edx, 29
	mov	ecx, DWORD PTR tv2190[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _H$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _H$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _H$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _C$[ebp]
	add	edi, DWORD PTR tv2190[ebp]
	lea	ecx, DWORD PTR [edx+edi-710438585]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _D$[ebp]
	or	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _G$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _C$[ebp], eax

; 144  :     P( C, D, E, F, G, H, A, B, R(30), 0x06CA6351 );

	mov	eax, 4
	imul	ecx, eax, 28
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 28
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 28
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 28
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 28
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 23
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 15
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 15
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 15
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 15
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 15
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 14
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2273[ebp], edx
	mov	edx, 4
	imul	eax, edx, 30
	mov	ecx, DWORD PTR tv2273[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _G$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _G$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _G$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _B$[ebp]
	add	edi, DWORD PTR tv2273[ebp]
	lea	ecx, DWORD PTR [edx+edi+113926993]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	or	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _F$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _B$[ebp], eax

; 145  :     P( B, C, D, E, F, G, H, A, R(31), 0x14292967 );

	mov	eax, 4
	imul	ecx, eax, 29
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 29
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 29
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 29
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 29
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 24
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	shl	eax, 4
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 7
	mov	eax, 4
	shl	eax, 4
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 25					; 00000019H
	or	ecx, eax
	mov	eax, 4
	shl	eax, 4
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 18					; 00000012H
	mov	esi, 4
	shl	esi, 4
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	eax, esi
	xor	ecx, eax
	mov	eax, 4
	shl	eax, 4
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 3
	xor	ecx, eax
	add	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 15
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv2356[ebp], edx
	mov	ecx, 4
	imul	edx, ecx, 31
	mov	eax, DWORD PTR tv2356[ebp]
	mov	DWORD PTR _W$[ebp+edx], eax
	mov	ecx, DWORD PTR _G$[ebp]
	xor	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	xor	ecx, DWORD PTR _H$[ebp]
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 25					; 00000019H
	or	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 21					; 00000015H
	mov	esi, DWORD PTR _F$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, edx
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 26					; 0000001aH
	mov	edi, DWORD PTR _F$[ebp]
	shr	edi, 6
	or	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _A$[ebp]
	add	edi, DWORD PTR tv2356[ebp]
	lea	eax, DWORD PTR [ecx+edi+338241895]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	mov	ecx, DWORD PTR _B$[ebp]
	or	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _D$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _E$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _A$[ebp], eax

; 146  :     P( A, B, C, D, E, F, G, H, R(32), 0x27B70A85 );

	mov	eax, 4
	imul	ecx, eax, 30
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 30
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 30
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 30
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 30
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 25
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 17
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 17
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 17
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 17
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 17
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	shl	eax, 4
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv2439[ebp], edx
	mov	ecx, 4
	shl	ecx, 5
	mov	edx, DWORD PTR tv2439[ebp]
	mov	DWORD PTR _W$[ebp+ecx], edx
	mov	eax, DWORD PTR _F$[ebp]
	xor	eax, DWORD PTR _G$[ebp]
	and	eax, DWORD PTR _E$[ebp]
	xor	eax, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 7
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 25					; 00000019H
	or	edx, ecx
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 21					; 00000015H
	mov	esi, DWORD PTR _E$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, ecx
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 26					; 0000001aH
	mov	edi, DWORD PTR _E$[ebp]
	shr	edi, 6
	or	edi, ecx
	xor	edi, esi
	xor	edi, edx
	add	edi, DWORD PTR _H$[ebp]
	add	edi, DWORD PTR tv2439[ebp]
	lea	edx, DWORD PTR [eax+edi+666307205]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	mov	ecx, DWORD PTR _A$[ebp]
	or	ecx, DWORD PTR _B$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _D$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _D$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _H$[ebp], eax

; 147  :     P( H, A, B, C, D, E, F, G, R(33), 0x2E1B2138 );

	mov	eax, 4
	imul	ecx, eax, 31
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 31
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 31
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 31
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 31
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 26
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 18
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 18
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 18
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 18
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 18
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 17
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2522[ebp], edx
	mov	edx, 4
	imul	eax, edx, 33
	mov	ecx, DWORD PTR tv2522[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _D$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _D$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _D$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _G$[ebp]
	add	edi, DWORD PTR tv2522[ebp]
	lea	ecx, DWORD PTR [edx+edi+773529912]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	mov	ecx, DWORD PTR _H$[ebp]
	or	ecx, DWORD PTR _A$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _C$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _C$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _G$[ebp], eax

; 148  :     P( G, H, A, B, C, D, E, F, R(34), 0x4D2C6DFC );

	mov	eax, 4
	shl	eax, 5
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 17					; 00000011H
	mov	edx, 4
	shl	edx, 5
	mov	eax, DWORD PTR _W$[ebp+edx]
	shl	eax, 15					; 0000000fH
	or	ecx, eax
	mov	edx, 4
	shl	edx, 5
	mov	eax, DWORD PTR _W$[ebp+edx]
	shr	eax, 19					; 00000013H
	mov	edx, 4
	shl	edx, 5
	mov	edx, DWORD PTR _W$[ebp+edx]
	shl	edx, 13					; 0000000dH
	or	eax, edx
	xor	ecx, eax
	mov	eax, 4
	shl	eax, 5
	mov	edx, DWORD PTR _W$[ebp+eax]
	shr	edx, 10					; 0000000aH
	xor	ecx, edx
	mov	eax, 4
	imul	edx, eax, 27
	add	ecx, DWORD PTR _W$[ebp+edx]
	mov	eax, 4
	imul	edx, eax, 19
	mov	eax, DWORD PTR _W$[ebp+edx]
	shr	eax, 7
	mov	edx, 4
	imul	edx, edx, 19
	mov	edx, DWORD PTR _W$[ebp+edx]
	shl	edx, 25					; 00000019H
	or	eax, edx
	mov	edx, 4
	imul	edx, edx, 19
	mov	edx, DWORD PTR _W$[ebp+edx]
	shr	edx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 19
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	edx, esi
	xor	eax, edx
	mov	edx, 4
	imul	edx, edx, 19
	mov	edx, DWORD PTR _W$[ebp+edx]
	shr	edx, 3
	xor	eax, edx
	add	ecx, eax
	mov	eax, 4
	imul	edx, eax, 18
	add	ecx, DWORD PTR _W$[ebp+edx]
	mov	DWORD PTR tv2605[ebp], ecx
	mov	eax, 4
	imul	ecx, eax, 34
	mov	edx, DWORD PTR tv2605[ebp]
	mov	DWORD PTR _W$[ebp+ecx], edx
	mov	eax, DWORD PTR _D$[ebp]
	xor	eax, DWORD PTR _E$[ebp]
	and	eax, DWORD PTR _C$[ebp]
	xor	eax, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 7
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 25					; 00000019H
	or	edx, ecx
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 21					; 00000015H
	mov	esi, DWORD PTR _C$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, ecx
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 26					; 0000001aH
	mov	edi, DWORD PTR _C$[ebp]
	shr	edi, 6
	or	edi, ecx
	xor	edi, esi
	xor	edi, edx
	add	edi, DWORD PTR _F$[ebp]
	add	edi, DWORD PTR tv2605[ebp]
	lea	edx, DWORD PTR [eax+edi+1294757372]
	mov	DWORD PTR _temp1$[ebp], edx
	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	mov	ecx, DWORD PTR _G$[ebp]
	or	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _B$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _F$[ebp], eax

; 149  :     P( F, G, H, A, B, C, D, E, R(35), 0x53380D13 );

	mov	eax, 4
	imul	ecx, eax, 33
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 33
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 33
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 33
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 33
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 28
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 20
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 20
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 20
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 20
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 20
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 19
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2688[ebp], edx
	mov	edx, 4
	imul	eax, edx, 35
	mov	ecx, DWORD PTR tv2688[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _B$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _B$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _B$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _E$[ebp]
	add	edi, DWORD PTR tv2688[ebp]
	lea	ecx, DWORD PTR [edx+edi+1396182291]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _F$[ebp]
	or	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _H$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _A$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _E$[ebp], eax

; 150  :     P( E, F, G, H, A, B, C, D, R(36), 0x650A7354 );

	mov	eax, 4
	imul	ecx, eax, 34
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 34
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 34
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 34
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 34
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 29
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 21
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 21
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 21
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 21
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 21
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 20
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2771[ebp], edx
	mov	edx, 4
	imul	eax, edx, 36
	mov	ecx, DWORD PTR tv2771[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _A$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _A$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _A$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _D$[ebp]
	add	edi, DWORD PTR tv2771[ebp]
	lea	ecx, DWORD PTR [edx+edi+1695183700]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	or	ecx, DWORD PTR _F$[ebp]
	and	ecx, DWORD PTR _G$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _H$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _D$[ebp], eax

; 151  :     P( D, E, F, G, H, A, B, C, R(37), 0x766A0ABB );

	mov	eax, 4
	imul	ecx, eax, 35
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 35
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 35
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 35
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 35
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 30
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 22
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 22
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 22
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 22
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 22
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 21
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2854[ebp], edx
	mov	edx, 4
	imul	eax, edx, 37
	mov	ecx, DWORD PTR tv2854[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _H$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _H$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _H$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _C$[ebp]
	add	edi, DWORD PTR tv2854[ebp]
	lea	ecx, DWORD PTR [edx+edi+1986661051]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _D$[ebp]
	or	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _G$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _C$[ebp], eax

; 152  :     P( C, D, E, F, G, H, A, B, R(38), 0x81C2C92E );

	mov	eax, 4
	imul	ecx, eax, 36
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 36
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 36
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 36
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 36
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 31
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 23
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 23
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 23
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 23
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 23
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 22
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv2937[ebp], edx
	mov	edx, 4
	imul	eax, edx, 38
	mov	ecx, DWORD PTR tv2937[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _G$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _G$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _G$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _B$[ebp]
	add	edi, DWORD PTR tv2937[ebp]
	lea	ecx, DWORD PTR [edx+edi-2117940946]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	or	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _F$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _B$[ebp], eax

; 153  :     P( B, C, D, E, F, G, H, A, R(39), 0x92722C85 );

	mov	eax, 4
	imul	ecx, eax, 37
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 37
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 37
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 37
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 37
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	shl	eax, 5
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	ecx, 4
	imul	eax, ecx, 24
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 7
	mov	eax, 4
	imul	eax, eax, 24
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 25					; 00000019H
	or	ecx, eax
	mov	eax, 4
	imul	eax, eax, 24
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 24
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	eax, esi
	xor	ecx, eax
	mov	eax, 4
	imul	eax, eax, 24
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 3
	xor	ecx, eax
	add	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 23
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv3020[ebp], edx
	mov	ecx, 4
	imul	edx, ecx, 39
	mov	eax, DWORD PTR tv3020[ebp]
	mov	DWORD PTR _W$[ebp+edx], eax
	mov	ecx, DWORD PTR _G$[ebp]
	xor	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	xor	ecx, DWORD PTR _H$[ebp]
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 25					; 00000019H
	or	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 21					; 00000015H
	mov	esi, DWORD PTR _F$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, edx
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 26					; 0000001aH
	mov	edi, DWORD PTR _F$[ebp]
	shr	edi, 6
	or	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _A$[ebp]
	add	edi, DWORD PTR tv3020[ebp]
	lea	eax, DWORD PTR [ecx+edi-1838011259]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	mov	ecx, DWORD PTR _B$[ebp]
	or	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _D$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _E$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _A$[ebp], eax

; 154  :     P( A, B, C, D, E, F, G, H, R(40), 0xA2BFE8A1 );

	mov	eax, 4
	imul	ecx, eax, 38
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 38
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 38
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 38
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 38
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 33
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 25
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 25
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 25
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 25
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 25
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 24
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3103[ebp], edx
	mov	edx, 4
	imul	eax, edx, 40
	mov	ecx, DWORD PTR tv3103[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _G$[ebp]
	mov	eax, DWORD PTR _E$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _E$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _E$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _E$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _E$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _E$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _H$[ebp]
	add	edi, DWORD PTR tv3103[ebp]
	lea	ecx, DWORD PTR [edx+edi-1564481375]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	mov	ecx, DWORD PTR _A$[ebp]
	or	ecx, DWORD PTR _B$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _D$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _D$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _H$[ebp], eax

; 155  :     P( H, A, B, C, D, E, F, G, R(41), 0xA81A664B );

	mov	eax, 4
	imul	ecx, eax, 39
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 39
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 39
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 39
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 39
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 34
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 26
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 26
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 26
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 26
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 26
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 25
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3186[ebp], edx
	mov	edx, 4
	imul	eax, edx, 41
	mov	ecx, DWORD PTR tv3186[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _D$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _D$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _D$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _G$[ebp]
	add	edi, DWORD PTR tv3186[ebp]
	lea	ecx, DWORD PTR [edx+edi-1474664885]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	mov	ecx, DWORD PTR _H$[ebp]
	or	ecx, DWORD PTR _A$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _C$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _C$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _G$[ebp], eax

; 156  :     P( G, H, A, B, C, D, E, F, R(42), 0xC24B8B70 );

	mov	eax, 4
	imul	ecx, eax, 40
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 40
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 40
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 40
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 40
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 35
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 27
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 27
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 27
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 27
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 27
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 26
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3269[ebp], edx
	mov	edx, 4
	imul	eax, edx, 42
	mov	ecx, DWORD PTR tv3269[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _C$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _C$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _C$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _F$[ebp]
	add	edi, DWORD PTR tv3269[ebp]
	lea	ecx, DWORD PTR [edx+edi-1035236496]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	mov	ecx, DWORD PTR _G$[ebp]
	or	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _B$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _F$[ebp], eax

; 157  :     P( F, G, H, A, B, C, D, E, R(43), 0xC76C51A3 );

	mov	eax, 4
	imul	ecx, eax, 41
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 41
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 41
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 41
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 41
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 36
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 28
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 28
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 28
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 28
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 28
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 27
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3352[ebp], edx
	mov	edx, 4
	imul	eax, edx, 43
	mov	ecx, DWORD PTR tv3352[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _B$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _B$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _B$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _E$[ebp]
	add	edi, DWORD PTR tv3352[ebp]
	lea	ecx, DWORD PTR [edx+edi-949202525]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _F$[ebp]
	or	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _H$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _A$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _E$[ebp], eax

; 158  :     P( E, F, G, H, A, B, C, D, R(44), 0xD192E819 );

	mov	eax, 4
	imul	ecx, eax, 42
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 42
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 42
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 42
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 42
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 37
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 29
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 29
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 29
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 29
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 29
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 28
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3435[ebp], edx
	mov	edx, 4
	imul	eax, edx, 44
	mov	ecx, DWORD PTR tv3435[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _A$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _A$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _A$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _D$[ebp]
	add	edi, DWORD PTR tv3435[ebp]
	lea	ecx, DWORD PTR [edx+edi-778901479]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	or	ecx, DWORD PTR _F$[ebp]
	and	ecx, DWORD PTR _G$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _H$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _D$[ebp], eax

; 159  :     P( D, E, F, G, H, A, B, C, R(45), 0xD6990624 );

	mov	eax, 4
	imul	ecx, eax, 43
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 43
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 43
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 43
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 43
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 38
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 30
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 30
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 30
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 30
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 30
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 29
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3518[ebp], edx
	mov	edx, 4
	imul	eax, edx, 45
	mov	ecx, DWORD PTR tv3518[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _H$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _H$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _H$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _C$[ebp]
	add	edi, DWORD PTR tv3518[ebp]
	lea	ecx, DWORD PTR [edx+edi-694614492]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _D$[ebp]
	or	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _G$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _C$[ebp], eax

; 160  :     P( C, D, E, F, G, H, A, B, R(46), 0xF40E3585 );

	mov	eax, 4
	imul	ecx, eax, 44
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 44
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 44
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 44
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 44
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 39
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 31
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 31
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 31
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 31
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 31
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 30
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3601[ebp], edx
	mov	edx, 4
	imul	eax, edx, 46
	mov	ecx, DWORD PTR tv3601[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _G$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _G$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _G$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _B$[ebp]
	add	edi, DWORD PTR tv3601[ebp]
	lea	ecx, DWORD PTR [edx+edi-200395387]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	or	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _F$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _B$[ebp], eax

; 161  :     P( B, C, D, E, F, G, H, A, R(47), 0x106AA070 );

	mov	eax, 4
	imul	ecx, eax, 45
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 45
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 45
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 45
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 45
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 40
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	shl	eax, 5
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 7
	mov	eax, 4
	shl	eax, 5
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 25					; 00000019H
	or	ecx, eax
	mov	eax, 4
	shl	eax, 5
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 18					; 00000012H
	mov	esi, 4
	shl	esi, 5
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	eax, esi
	xor	ecx, eax
	mov	eax, 4
	shl	eax, 5
	mov	eax, DWORD PTR _W$[ebp+eax]
	shr	eax, 3
	xor	ecx, eax
	add	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 31
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv3684[ebp], edx
	mov	ecx, 4
	imul	edx, ecx, 47
	mov	eax, DWORD PTR tv3684[ebp]
	mov	DWORD PTR _W$[ebp+edx], eax
	mov	ecx, DWORD PTR _G$[ebp]
	xor	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	xor	ecx, DWORD PTR _H$[ebp]
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 25					; 00000019H
	or	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 21					; 00000015H
	mov	esi, DWORD PTR _F$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, edx
	mov	edx, DWORD PTR _F$[ebp]
	shl	edx, 26					; 0000001aH
	mov	edi, DWORD PTR _F$[ebp]
	shr	edi, 6
	or	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _A$[ebp]
	add	edi, DWORD PTR tv3684[ebp]
	lea	eax, DWORD PTR [ecx+edi+275423344]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	mov	ecx, DWORD PTR _B$[ebp]
	or	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _D$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _E$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _A$[ebp], eax

; 162  :     P( A, B, C, D, E, F, G, H, R(48), 0x19A4C116 );

	mov	eax, 4
	imul	ecx, eax, 46
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 46
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 46
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 46
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 46
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 41
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 33
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 33
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 33
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 33
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 33
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	shl	eax, 5
	add	edx, DWORD PTR _W$[ebp+eax]
	mov	DWORD PTR tv3767[ebp], edx
	mov	ecx, 4
	imul	edx, ecx, 48
	mov	eax, DWORD PTR tv3767[ebp]
	mov	DWORD PTR _W$[ebp+edx], eax
	mov	ecx, DWORD PTR _F$[ebp]
	xor	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	xor	ecx, DWORD PTR _G$[ebp]
	mov	edx, DWORD PTR _E$[ebp]
	shl	edx, 7
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 25					; 00000019H
	or	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shl	edx, 21					; 00000015H
	mov	esi, DWORD PTR _E$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, edx
	mov	edx, DWORD PTR _E$[ebp]
	shl	edx, 26					; 0000001aH
	mov	edi, DWORD PTR _E$[ebp]
	shr	edi, 6
	or	edi, edx
	xor	edi, esi
	xor	edi, eax
	add	edi, DWORD PTR _H$[ebp]
	add	edi, DWORD PTR tv3767[ebp]
	lea	eax, DWORD PTR [ecx+edi+430227734]
	mov	DWORD PTR _temp1$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	mov	ecx, DWORD PTR _A$[ebp]
	or	ecx, DWORD PTR _B$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _D$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _D$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _H$[ebp], eax

; 163  :     P( H, A, B, C, D, E, F, G, R(49), 0x1E376C08 );

	mov	eax, 4
	imul	ecx, eax, 47
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 47
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 47
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 47
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 47
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 42
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 34
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 34
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 34
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 34
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 34
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 33
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3850[ebp], edx
	mov	edx, 4
	imul	eax, edx, 49
	mov	ecx, DWORD PTR tv3850[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _D$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _D$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _D$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _G$[ebp]
	add	edi, DWORD PTR tv3850[ebp]
	lea	ecx, DWORD PTR [edx+edi+506948616]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	mov	ecx, DWORD PTR _H$[ebp]
	or	ecx, DWORD PTR _A$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _C$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _C$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _G$[ebp], eax

; 164  :     P( G, H, A, B, C, D, E, F, R(50), 0x2748774C );

	mov	eax, 4
	imul	ecx, eax, 48
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 48
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 48
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 48
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 48
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 43
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 35
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 35
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 35
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 35
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 35
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 34
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv3933[ebp], edx
	mov	edx, 4
	imul	eax, edx, 50
	mov	ecx, DWORD PTR tv3933[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _C$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _C$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _C$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _F$[ebp]
	add	edi, DWORD PTR tv3933[ebp]
	lea	ecx, DWORD PTR [edx+edi+659060556]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	mov	ecx, DWORD PTR _G$[ebp]
	or	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _B$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _F$[ebp], eax

; 165  :     P( F, G, H, A, B, C, D, E, R(51), 0x34B0BCB5 );

	mov	eax, 4
	imul	ecx, eax, 49
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 49
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 49
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 49
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 49
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 44
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 36
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 36
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 36
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 36
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 36
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 35
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4016[ebp], edx
	mov	edx, 4
	imul	eax, edx, 51
	mov	ecx, DWORD PTR tv4016[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _B$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _B$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _B$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _E$[ebp]
	add	edi, DWORD PTR tv4016[ebp]
	lea	ecx, DWORD PTR [edx+edi+883997877]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _F$[ebp]
	or	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _H$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _A$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _E$[ebp], eax

; 166  :     P( E, F, G, H, A, B, C, D, R(52), 0x391C0CB3 );

	mov	eax, 4
	imul	ecx, eax, 50
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 50
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 50
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 50
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 50
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 45
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 37
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 37
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 37
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 37
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 37
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 36
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4099[ebp], edx
	mov	edx, 4
	imul	eax, edx, 52
	mov	ecx, DWORD PTR tv4099[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _A$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _A$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _A$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _D$[ebp]
	add	edi, DWORD PTR tv4099[ebp]
	lea	ecx, DWORD PTR [edx+edi+958139571]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	or	ecx, DWORD PTR _F$[ebp]
	and	ecx, DWORD PTR _G$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _H$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _D$[ebp], eax

; 167  :     P( D, E, F, G, H, A, B, C, R(53), 0x4ED8AA4A );

	mov	eax, 4
	imul	ecx, eax, 51
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 51
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 51
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 51
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 51
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 46
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 38
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 38
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 38
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 38
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 38
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 37
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4182[ebp], edx
	mov	edx, 4
	imul	eax, edx, 53
	mov	ecx, DWORD PTR tv4182[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _H$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _H$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _H$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _C$[ebp]
	add	edi, DWORD PTR tv4182[ebp]
	lea	ecx, DWORD PTR [edx+edi+1322822218]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _D$[ebp]
	or	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _G$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _C$[ebp], eax

; 168  :     P( C, D, E, F, G, H, A, B, R(54), 0x5B9CCA4F );

	mov	eax, 4
	imul	ecx, eax, 52
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 52
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 52
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 52
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 52
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 47
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 39
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 39
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 39
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 39
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 39
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 38
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4265[ebp], edx
	mov	edx, 4
	imul	eax, edx, 54
	mov	ecx, DWORD PTR tv4265[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _G$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _G$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _G$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _B$[ebp]
	add	edi, DWORD PTR tv4265[ebp]
	lea	ecx, DWORD PTR [edx+edi+1537002063]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	or	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _F$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _B$[ebp], eax

; 169  :     P( B, C, D, E, F, G, H, A, R(55), 0x682E6FF3 );

	mov	eax, 4
	imul	ecx, eax, 53
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 53
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 53
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 53
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 53
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 48
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 40
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 40
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 40
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 40
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 40
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 39
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4348[ebp], edx
	mov	edx, 4
	imul	eax, edx, 55
	mov	ecx, DWORD PTR tv4348[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _F$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _F$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _F$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _A$[ebp]
	add	edi, DWORD PTR tv4348[ebp]
	lea	ecx, DWORD PTR [edx+edi+1747873779]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	mov	ecx, DWORD PTR _B$[ebp]
	or	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _D$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _E$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _A$[ebp], eax

; 170  :     P( A, B, C, D, E, F, G, H, R(56), 0x748F82EE );

	mov	eax, 4
	imul	ecx, eax, 54
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 54
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 54
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 54
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 54
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 49
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 41
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 41
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 41
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 41
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 41
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 40
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4431[ebp], edx
	mov	edx, 4
	imul	eax, edx, 56
	mov	ecx, DWORD PTR tv4431[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _G$[ebp]
	mov	eax, DWORD PTR _E$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _E$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _E$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _E$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _E$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _E$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _H$[ebp]
	add	edi, DWORD PTR tv4431[ebp]
	lea	ecx, DWORD PTR [edx+edi+1955562222]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _A$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _A$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	mov	ecx, DWORD PTR _A$[ebp]
	or	ecx, DWORD PTR _B$[ebp]
	and	ecx, DWORD PTR _C$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _D$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _D$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _H$[ebp], eax

; 171  :     P( H, A, B, C, D, E, F, G, R(57), 0x78A5636F );

	mov	eax, 4
	imul	ecx, eax, 55
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 55
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 55
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 55
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 55
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 50
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 42
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 42
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 42
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 42
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 42
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 41
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4514[ebp], edx
	mov	edx, 4
	imul	eax, edx, 57
	mov	ecx, DWORD PTR tv4514[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _E$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _F$[ebp]
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _D$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _D$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _D$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _D$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _G$[ebp]
	add	edi, DWORD PTR tv4514[ebp]
	lea	ecx, DWORD PTR [edx+edi+2024104815]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _H$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _H$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	mov	ecx, DWORD PTR _H$[ebp]
	or	ecx, DWORD PTR _A$[ebp]
	and	ecx, DWORD PTR _B$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _C$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _C$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _G$[ebp], eax

; 172  :     P( G, H, A, B, C, D, E, F, R(58), 0x84C87814 );

	mov	eax, 4
	imul	ecx, eax, 56
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 56
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 56
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 56
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 56
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 51
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 43
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 43
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 43
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 43
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 43
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 42
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4597[ebp], edx
	mov	edx, 4
	imul	eax, edx, 58
	mov	ecx, DWORD PTR tv4597[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _D$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _E$[ebp]
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _C$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _C$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _C$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _C$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _F$[ebp]
	add	edi, DWORD PTR tv4597[ebp]
	lea	ecx, DWORD PTR [edx+edi-2067236844]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _G$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _G$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _G$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	mov	ecx, DWORD PTR _G$[ebp]
	or	ecx, DWORD PTR _H$[ebp]
	and	ecx, DWORD PTR _A$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _B$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _B$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _F$[ebp], eax

; 173  :     P( F, G, H, A, B, C, D, E, R(59), 0x8CC70208 );

	mov	eax, 4
	imul	ecx, eax, 57
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 57
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 57
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 57
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 57
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 52
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 44
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 44
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 44
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 44
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 44
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 43
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4680[ebp], edx
	mov	edx, 4
	imul	eax, edx, 59
	mov	ecx, DWORD PTR tv4680[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _C$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _D$[ebp]
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _B$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _B$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _B$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _B$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _E$[ebp]
	add	edi, DWORD PTR tv4680[ebp]
	lea	ecx, DWORD PTR [edx+edi-1933114872]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _F$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _F$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _F$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	mov	ecx, DWORD PTR _F$[ebp]
	or	ecx, DWORD PTR _G$[ebp]
	and	ecx, DWORD PTR _H$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _A$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _A$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _E$[ebp], eax

; 174  :     P( E, F, G, H, A, B, C, D, R(60), 0x90BEFFFA );

	mov	eax, 4
	imul	ecx, eax, 58
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 58
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 58
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 58
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 58
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 53
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 45
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 45
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 45
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 45
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 45
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 44
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4763[ebp], edx
	mov	edx, 4
	imul	eax, edx, 60
	mov	ecx, DWORD PTR tv4763[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _B$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _C$[ebp]
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _A$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _A$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _A$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _A$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _D$[ebp]
	add	edi, DWORD PTR tv4763[ebp]
	lea	ecx, DWORD PTR [edx+edi-1866530822]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _E$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _E$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _E$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	mov	ecx, DWORD PTR _E$[ebp]
	or	ecx, DWORD PTR _F$[ebp]
	and	ecx, DWORD PTR _G$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _H$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _H$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _D$[ebp], eax

; 175  :     P( D, E, F, G, H, A, B, C, R(61), 0xA4506CEB );

	mov	eax, 4
	imul	ecx, eax, 59
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 59
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 59
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 59
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 59
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 54
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 46
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 46
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 46
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 46
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 46
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 45
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4846[ebp], edx
	mov	edx, 4
	imul	eax, edx, 61
	mov	ecx, DWORD PTR tv4846[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _A$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _B$[ebp]
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _H$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _H$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _H$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _H$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _C$[ebp]
	add	edi, DWORD PTR tv4846[ebp]
	lea	ecx, DWORD PTR [edx+edi-1538233109]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _D$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _D$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _D$[ebp]
	and	edx, DWORD PTR _E$[ebp]
	mov	ecx, DWORD PTR _D$[ebp]
	or	ecx, DWORD PTR _E$[ebp]
	and	ecx, DWORD PTR _F$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _G$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _G$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _C$[ebp], eax

; 176  :     P( C, D, E, F, G, H, A, B, R(62), 0xBEF9A3F7 );

	mov	eax, 4
	imul	ecx, eax, 60
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 60
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 60
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 60
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 60
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 55
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 47
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 47
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 47
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 47
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 47
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 46
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv4929[ebp], edx
	mov	edx, 4
	imul	eax, edx, 62
	mov	ecx, DWORD PTR tv4929[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _H$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	and	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _A$[ebp]
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _G$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _G$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _G$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _G$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _B$[ebp]
	add	edi, DWORD PTR tv4929[ebp]
	lea	ecx, DWORD PTR [edx+edi-1090935817]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _C$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _C$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _C$[ebp]
	and	edx, DWORD PTR _D$[ebp]
	mov	ecx, DWORD PTR _C$[ebp]
	or	ecx, DWORD PTR _D$[ebp]
	and	ecx, DWORD PTR _E$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _F$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _F$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _B$[ebp], eax

; 177  :     P( B, C, D, E, F, G, H, A, R(63), 0xC67178F2 );

	mov	eax, 4
	imul	ecx, eax, 61
	mov	edx, DWORD PTR _W$[ebp+ecx]
	shr	edx, 17					; 00000011H
	mov	eax, 4
	imul	ecx, eax, 61
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shl	eax, 15					; 0000000fH
	or	edx, eax
	mov	ecx, 4
	imul	eax, ecx, 61
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 19					; 00000013H
	mov	eax, 4
	imul	eax, eax, 61
	mov	eax, DWORD PTR _W$[ebp+eax]
	shl	eax, 13					; 0000000dH
	or	ecx, eax
	xor	edx, ecx
	mov	ecx, 4
	imul	eax, ecx, 61
	mov	ecx, DWORD PTR _W$[ebp+eax]
	shr	ecx, 10					; 0000000aH
	xor	edx, ecx
	mov	eax, 4
	imul	ecx, eax, 56
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	eax, 4
	imul	ecx, eax, 48
	mov	eax, DWORD PTR _W$[ebp+ecx]
	shr	eax, 7
	mov	ecx, 4
	imul	ecx, ecx, 48
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shl	ecx, 25					; 00000019H
	or	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 48
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 18					; 00000012H
	mov	esi, 4
	imul	esi, esi, 48
	mov	esi, DWORD PTR _W$[ebp+esi]
	shl	esi, 14					; 0000000eH
	or	ecx, esi
	xor	eax, ecx
	mov	ecx, 4
	imul	ecx, ecx, 48
	mov	ecx, DWORD PTR _W$[ebp+ecx]
	shr	ecx, 3
	xor	eax, ecx
	add	edx, eax
	mov	eax, 4
	imul	ecx, eax, 47
	add	edx, DWORD PTR _W$[ebp+ecx]
	mov	DWORD PTR tv5012[ebp], edx
	mov	edx, 4
	imul	eax, edx, 63
	mov	ecx, DWORD PTR tv5012[ebp]
	mov	DWORD PTR _W$[ebp+eax], ecx
	mov	edx, DWORD PTR _G$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	and	edx, DWORD PTR _F$[ebp]
	xor	edx, DWORD PTR _H$[ebp]
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 7
	mov	ecx, DWORD PTR _F$[ebp]
	shr	ecx, 25					; 00000019H
	or	ecx, eax
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 21					; 00000015H
	mov	esi, DWORD PTR _F$[ebp]
	shr	esi, 11					; 0000000bH
	or	esi, eax
	mov	eax, DWORD PTR _F$[ebp]
	shl	eax, 26					; 0000001aH
	mov	edi, DWORD PTR _F$[ebp]
	shr	edi, 6
	or	edi, eax
	xor	edi, esi
	xor	edi, ecx
	add	edi, DWORD PTR _A$[ebp]
	add	edi, DWORD PTR tv5012[ebp]
	lea	ecx, DWORD PTR [edx+edi-965641998]
	mov	DWORD PTR _temp1$[ebp], ecx
	mov	eax, DWORD PTR _B$[ebp]
	shr	eax, 2
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 30					; 0000001eH
	or	eax, ecx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 13					; 0000000dH
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 19					; 00000013H
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	shr	edx, 22					; 00000016H
	mov	ecx, DWORD PTR _B$[ebp]
	shl	ecx, 10					; 0000000aH
	or	edx, ecx
	xor	eax, edx
	mov	edx, DWORD PTR _B$[ebp]
	and	edx, DWORD PTR _C$[ebp]
	mov	ecx, DWORD PTR _B$[ebp]
	or	ecx, DWORD PTR _C$[ebp]
	and	ecx, DWORD PTR _D$[ebp]
	or	edx, ecx
	add	eax, edx
	mov	DWORD PTR _temp2$[ebp], eax
	mov	eax, DWORD PTR _E$[ebp]
	add	eax, DWORD PTR _temp1$[ebp]
	mov	DWORD PTR _E$[ebp], eax
	mov	eax, DWORD PTR _temp1$[ebp]
	add	eax, DWORD PTR _temp2$[ebp]
	mov	DWORD PTR _A$[ebp], eax

; 178  : 
; 179  :     ctx->state[0] += A;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	add	eax, DWORD PTR _A$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+edx+8], eax

; 180  :     ctx->state[1] += B;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	add	edx, DWORD PTR _B$[ebp]
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx

; 181  :     ctx->state[2] += C;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	add	edx, DWORD PTR _C$[ebp]
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx

; 182  :     ctx->state[3] += D;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	add	eax, DWORD PTR _D$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 3
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+edx+8], eax

; 183  :     ctx->state[4] += E;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	add	edx, DWORD PTR _E$[ebp]
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax+8], edx

; 184  :     ctx->state[5] += F;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	add	eax, DWORD PTR _F$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 5
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+edx+8], eax

; 185  :     ctx->state[6] += G;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	add	eax, DWORD PTR _G$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 6
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+edx+8], eax

; 186  :     ctx->state[7] += H;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	add	eax, DWORD PTR _H$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 7
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+edx+8], eax

; 187  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN5@sha256_pro
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN5@sha256_pro:
	DD	1
	DD	$LN4@sha256_pro
$LN4@sha256_pro:
	DD	-288					; fffffee0H
	DD	256					; 00000100H
	DD	$LN3@sha256_pro
$LN3@sha256_pro:
	DB	87					; 00000057H
	DB	0
?sha256_process@@YAXPAUsha256_context@@QAE@Z ENDP	; sha256_process
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\odiep\downloads\2017 01 cs 3843 project - rev2__studentfiles\__studentfiles4project\sha-256.cpp
;	COMDAT ?sha256_finish@@YAXPAUsha256_context@@QAE@Z
_TEXT	SEGMENT
tv144 = -264						; size = 4
_msglen$ = -64						; size = 8
_low$ = -48						; size = 4
_high$ = -36						; size = 4
_padn$ = -24						; size = 4
_last$ = -12						; size = 4
__$ArrayPad$ = -4					; size = 4
_ctx$ = 8						; size = 4
_digest$ = 12						; size = 4
?sha256_finish@@YAXPAUsha256_context@@QAE@Z PROC	; sha256_finish, COMDAT

; 237  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 264				; 00000108H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-264]
	mov	ecx, 66					; 00000042H
	mov	eax, -858993460				; ccccccccH
	rep stosd
	mov	eax, DWORD PTR ___security_cookie
	xor	eax, ebp
	mov	DWORD PTR __$ArrayPad$[ebp], eax

; 238  :     uint32 last, padn;
; 239  :     uint32 high, low;
; 240  :     uint8 msglen[8];
; 241  : 
; 242  :     high = ( ctx->total[0] >> 29 )

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	shr	eax, 29					; 0000001dH
	mov	ecx, 4
	shl	ecx, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [edx+ecx]
	shl	ecx, 3
	or	eax, ecx
	mov	DWORD PTR _high$[ebp], eax

; 243  :          | ( ctx->total[1] <<  3 );
; 244  :     low  = ( ctx->total[0] <<  3 );

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	shl	eax, 3
	mov	DWORD PTR _low$[ebp], eax

; 245  : 
; 246  :     PUT_UINT32( high, msglen, 0 );

	mov	eax, DWORD PTR _high$[ebp]
	shr	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	BYTE PTR _msglen$[ebp+edx], al
	mov	eax, DWORD PTR _high$[ebp]
	shr	eax, 16					; 00000010H
	mov	ecx, 1
	shl	ecx, 0
	mov	BYTE PTR _msglen$[ebp+ecx], al
	mov	eax, DWORD PTR _high$[ebp]
	shr	eax, 8
	mov	ecx, 1
	shl	ecx, 1
	mov	BYTE PTR _msglen$[ebp+ecx], al
	mov	eax, 1
	imul	ecx, eax, 3
	mov	dl, BYTE PTR _high$[ebp]
	mov	BYTE PTR _msglen$[ebp+ecx], dl

; 247  :     PUT_UINT32( low,  msglen, 4 );

	mov	eax, DWORD PTR _low$[ebp]
	shr	eax, 24					; 00000018H
	mov	ecx, 1
	shl	ecx, 2
	mov	BYTE PTR _msglen$[ebp+ecx], al
	mov	eax, DWORD PTR _low$[ebp]
	shr	eax, 16					; 00000010H
	mov	ecx, 1
	imul	edx, ecx, 5
	mov	BYTE PTR _msglen$[ebp+edx], al
	mov	eax, DWORD PTR _low$[ebp]
	shr	eax, 8
	mov	ecx, 1
	imul	edx, ecx, 6
	mov	BYTE PTR _msglen$[ebp+edx], al
	mov	eax, 1
	imul	ecx, eax, 7
	mov	dl, BYTE PTR _low$[ebp]
	mov	BYTE PTR _msglen$[ebp+ecx], dl

; 248  : 
; 249  :     last = ctx->total[0] & 0x3F;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	and	eax, 63					; 0000003fH
	mov	DWORD PTR _last$[ebp], eax

; 250  :     padn = ( last < 56 ) ? ( 56 - last ) : ( 120 - last );

	cmp	DWORD PTR _last$[ebp], 56		; 00000038H
	jae	SHORT $LN3@sha256_fin
	mov	eax, 56					; 00000038H
	sub	eax, DWORD PTR _last$[ebp]
	mov	DWORD PTR tv144[ebp], eax
	jmp	SHORT $LN4@sha256_fin
$LN3@sha256_fin:
	mov	ecx, 120				; 00000078H
	sub	ecx, DWORD PTR _last$[ebp]
	mov	DWORD PTR tv144[ebp], ecx
$LN4@sha256_fin:
	mov	edx, DWORD PTR tv144[ebp]
	mov	DWORD PTR _padn$[ebp], edx

; 251  : 
; 252  :     sha256_update( ctx, sha256_padding, padn );

	mov	eax, DWORD PTR _padn$[ebp]
	push	eax
	push	OFFSET ?sha256_padding@@3PAEA
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	?sha256_update@@YAXPAUsha256_context@@PAEK@Z ; sha256_update
	add	esp, 12					; 0000000cH

; 253  :     sha256_update( ctx, msglen, 8 );

	push	8
	lea	eax, DWORD PTR _msglen$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	?sha256_update@@YAXPAUsha256_context@@PAEK@Z ; sha256_update
	add	esp, 12					; 0000000cH

; 254  : 
; 255  :     PUT_UINT32( ctx->state[0], digest,  0 );

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 16					; 00000010H
	mov	ecx, 1
	shl	ecx, 0
	mov	edx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [edx+ecx], al
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 8
	mov	ecx, 1
	shl	ecx, 1
	mov	edx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [edx+ecx], al
	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, 1
	imul	eax, edx, 3
	mov	edx, DWORD PTR _digest$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	cl, BYTE PTR [esi+ecx+8]
	mov	BYTE PTR [edx+eax], cl

; 256  :     PUT_UINT32( ctx->state[1], digest,  4 );

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 24					; 00000018H
	mov	eax, 1
	shl	eax, 2
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 16					; 00000010H
	mov	eax, 1
	imul	ecx, eax, 5
	mov	eax, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 8
	mov	eax, 1
	imul	ecx, eax, 6
	mov	eax, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, 4
	shl	eax, 0
	mov	ecx, 1
	imul	edx, ecx, 7
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	al, BYTE PTR [esi+eax+8]
	mov	BYTE PTR [ecx+edx], al

; 257  :     PUT_UINT32( ctx->state[2], digest,  8 );

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 24					; 00000018H
	mov	eax, 1
	shl	eax, 3
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 16					; 00000010H
	mov	eax, 1
	imul	ecx, eax, 9
	mov	eax, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 8
	mov	eax, 1
	imul	ecx, eax, 10
	mov	eax, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, 4
	shl	eax, 1
	mov	ecx, 1
	imul	edx, ecx, 11
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	al, BYTE PTR [esi+eax+8]
	mov	BYTE PTR [ecx+edx], al

; 258  :     PUT_UINT32( ctx->state[3], digest, 12 );

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 12
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 16					; 00000010H
	mov	ecx, 1
	imul	edx, ecx, 13
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 8
	mov	ecx, 1
	imul	edx, ecx, 14
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, 1
	imul	eax, edx, 15
	mov	edx, DWORD PTR _digest$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	cl, BYTE PTR [esi+ecx+8]
	mov	BYTE PTR [edx+eax], cl

; 259  :     PUT_UINT32( ctx->state[4], digest, 16 );

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 24					; 00000018H
	mov	eax, 1
	shl	eax, 4
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+eax], dl
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 16					; 00000010H
	mov	eax, 1
	imul	ecx, eax, 17
	mov	eax, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax+8]
	shr	edx, 8
	mov	eax, 1
	imul	ecx, eax, 18
	mov	eax, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [eax+ecx], dl
	mov	eax, 4
	shl	eax, 2
	mov	ecx, 1
	imul	edx, ecx, 19
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	al, BYTE PTR [esi+eax+8]
	mov	BYTE PTR [ecx+edx], al

; 260  :     PUT_UINT32( ctx->state[5], digest, 20 );

	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 20
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 16					; 00000010H
	mov	ecx, 1
	imul	edx, ecx, 21
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 8
	mov	ecx, 1
	imul	edx, ecx, 22
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, 1
	imul	eax, edx, 23
	mov	edx, DWORD PTR _digest$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	cl, BYTE PTR [esi+ecx+8]
	mov	BYTE PTR [edx+eax], cl

; 261  :     PUT_UINT32( ctx->state[6], digest, 24 );

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 24
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 16					; 00000010H
	mov	ecx, 1
	imul	edx, ecx, 25
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 8
	mov	ecx, 1
	imul	edx, ecx, 26
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, 1
	imul	eax, edx, 27
	mov	edx, DWORD PTR _digest$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	cl, BYTE PTR [esi+ecx+8]
	mov	BYTE PTR [edx+eax], cl

; 262  :     PUT_UINT32( ctx->state[7], digest, 28 );

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 24					; 00000018H
	mov	ecx, 1
	imul	edx, ecx, 28
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 16					; 00000010H
	mov	ecx, 1
	imul	edx, ecx, 29
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx+8]
	shr	eax, 8
	mov	ecx, 1
	imul	edx, ecx, 30
	mov	ecx, DWORD PTR _digest$[ebp]
	mov	BYTE PTR [ecx+edx], al
	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, 1
	imul	eax, edx, 31
	mov	edx, DWORD PTR _digest$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	cl, BYTE PTR [esi+ecx+8]
	mov	BYTE PTR [edx+eax], cl

; 263  : }

	push	edx
	mov	ecx, ebp
	push	eax
	lea	edx, DWORD PTR $LN7@sha256_fin
	call	@_RTC_CheckStackVars@8
	pop	eax
	pop	edx
	pop	edi
	pop	esi
	pop	ebx
	mov	ecx, DWORD PTR __$ArrayPad$[ebp]
	xor	ecx, ebp
	call	@__security_check_cookie@4
	add	esp, 264				; 00000108H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
	npad	2
$LN7@sha256_fin:
	DD	1
	DD	$LN6@sha256_fin
$LN6@sha256_fin:
	DD	-64					; ffffffc0H
	DD	8
	DD	$LN5@sha256_fin
$LN5@sha256_fin:
	DB	109					; 0000006dH
	DB	115					; 00000073H
	DB	103					; 00000067H
	DB	108					; 0000006cH
	DB	101					; 00000065H
	DB	110					; 0000006eH
	DB	0
?sha256_finish@@YAXPAUsha256_context@@QAE@Z ENDP	; sha256_finish
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\odiep\downloads\2017 01 cs 3843 project - rev2__studentfiles\__studentfiles4project\sha-256.cpp
;	COMDAT ?sha256_update@@YAXPAUsha256_context@@PAEK@Z
_TEXT	SEGMENT
_fill$ = -20						; size = 4
_left$ = -8						; size = 4
_ctx$ = 8						; size = 4
_input$ = 12						; size = 4
_length$ = 16						; size = 4
?sha256_update@@YAXPAUsha256_context@@PAEK@Z PROC	; sha256_update, COMDAT

; 190  : {

	push	ebp
	mov	ebp, esp
	sub	esp, 216				; 000000d8H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-216]
	mov	ecx, 54					; 00000036H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 191  :     uint32 left, fill;
; 192  : 
; 193  :     if( ! length ) return;

	cmp	DWORD PTR _length$[ebp], 0
	jne	SHORT $LN4@sha256_upd
	jmp	$LN1@sha256_upd
$LN4@sha256_upd:

; 194  : 
; 195  :     left = ctx->total[0] & 0x3F;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	and	eax, 63					; 0000003fH
	mov	DWORD PTR _left$[ebp], eax

; 196  :     fill = 64 - left;

	mov	eax, 64					; 00000040H
	sub	eax, DWORD PTR _left$[ebp]
	mov	DWORD PTR _fill$[ebp], eax

; 197  : 
; 198  :     ctx->total[0] += length;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	add	eax, DWORD PTR _length$[ebp]
	mov	ecx, 4
	imul	edx, ecx, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+edx], eax

; 199  :     ctx->total[0] &= 0xFFFFFFFF;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, 4
	imul	eax, edx, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	esi, DWORD PTR _ctx$[ebp]
	mov	ecx, DWORD PTR [esi+ecx]
	mov	DWORD PTR [edx+eax], ecx

; 200  : 
; 201  :     if( ctx->total[0] < length )

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	eax, DWORD PTR [edx+ecx]
	cmp	eax, DWORD PTR _length$[ebp]
	jae	SHORT $LN5@sha256_upd

; 202  :         ctx->total[1]++;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	edx, DWORD PTR [ecx+eax]
	add	edx, 1
	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax], edx
$LN5@sha256_upd:

; 203  : 
; 204  :     if( left && length >= fill )

	cmp	DWORD PTR _left$[ebp], 0
	je	SHORT $LN2@sha256_upd
	mov	eax, DWORD PTR _length$[ebp]
	cmp	eax, DWORD PTR _fill$[ebp]
	jb	SHORT $LN2@sha256_upd

; 205  :     {
; 206  :         memcpy( (void *) (ctx->buffer + left),

	mov	eax, DWORD PTR _fill$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	mov	edx, DWORD PTR _left$[ebp]
	mov	eax, DWORD PTR _ctx$[ebp]
	lea	ecx, DWORD PTR [eax+edx+40]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH

; 207  :                 (void *) input, fill );
; 208  :         sha256_process( ctx, ctx->buffer );

	mov	eax, DWORD PTR _ctx$[ebp]
	add	eax, 40					; 00000028H
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	?sha256_process@@YAXPAUsha256_context@@QAE@Z ; sha256_process
	add	esp, 8

; 209  :         length -= fill;

	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, DWORD PTR _fill$[ebp]
	mov	DWORD PTR _length$[ebp], eax

; 210  :         input  += fill;

	mov	eax, DWORD PTR _input$[ebp]
	add	eax, DWORD PTR _fill$[ebp]
	mov	DWORD PTR _input$[ebp], eax

; 211  :         left = 0;

	mov	DWORD PTR _left$[ebp], 0
$LN2@sha256_upd:

; 212  :     }
; 213  : 
; 214  :     while( length >= 64 )

	cmp	DWORD PTR _length$[ebp], 64		; 00000040H
	jb	SHORT $LN3@sha256_upd

; 215  :     {
; 216  :         sha256_process( ctx, input );

	mov	eax, DWORD PTR _input$[ebp]
	push	eax
	mov	ecx, DWORD PTR _ctx$[ebp]
	push	ecx
	call	?sha256_process@@YAXPAUsha256_context@@QAE@Z ; sha256_process
	add	esp, 8

; 217  :         length -= 64;

	mov	eax, DWORD PTR _length$[ebp]
	sub	eax, 64					; 00000040H
	mov	DWORD PTR _length$[ebp], eax

; 218  :         input  += 64;

	mov	eax, DWORD PTR _input$[ebp]
	add	eax, 64					; 00000040H
	mov	DWORD PTR _input$[ebp], eax

; 219  :     }

	jmp	SHORT $LN2@sha256_upd
$LN3@sha256_upd:

; 220  : 
; 221  :     if( length )

	cmp	DWORD PTR _length$[ebp], 0
	je	SHORT $LN1@sha256_upd

; 222  :     {
; 223  :         memcpy( (void *) (ctx->buffer + left),

	mov	eax, DWORD PTR _length$[ebp]
	push	eax
	mov	ecx, DWORD PTR _input$[ebp]
	push	ecx
	mov	edx, DWORD PTR _left$[ebp]
	mov	eax, DWORD PTR _ctx$[ebp]
	lea	ecx, DWORD PTR [eax+edx+40]
	push	ecx
	call	_memcpy
	add	esp, 12					; 0000000cH
$LN1@sha256_upd:

; 224  :                 (void *) input, length );
; 225  :     }
; 226  : }

	pop	edi
	pop	esi
	pop	ebx
	add	esp, 216				; 000000d8H
	cmp	ebp, esp
	call	__RTC_CheckEsp
	mov	esp, ebp
	pop	ebp
	ret	0
?sha256_update@@YAXPAUsha256_context@@PAEK@Z ENDP	; sha256_update
_TEXT	ENDS
; Function compile flags: /Odtp /RTCsu /ZI
; File c:\users\odiep\downloads\2017 01 cs 3843 project - rev2__studentfiles\__studentfiles4project\sha-256.cpp
;	COMDAT ?sha256_starts@@YAXPAUsha256_context@@@Z
_TEXT	SEGMENT
_ctx$ = 8						; size = 4
?sha256_starts@@YAXPAUsha256_context@@@Z PROC		; sha256_starts, COMDAT

; 44   : {

	push	ebp
	mov	ebp, esp
	sub	esp, 192				; 000000c0H
	push	ebx
	push	esi
	push	edi
	lea	edi, DWORD PTR [ebp-192]
	mov	ecx, 48					; 00000030H
	mov	eax, -858993460				; ccccccccH
	rep stosd

; 45   :     ctx->total[0] = 0;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+ecx], 0

; 46   :     ctx->total[1] = 0;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax], 0

; 47   : 
; 48   :     ctx->state[0] = 0x6A09E667;

	mov	eax, 4
	imul	ecx, eax, 0
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+ecx+8], 1779033703	; 6a09e667H

; 49   :     ctx->state[1] = 0xBB67AE85;

	mov	eax, 4
	shl	eax, 0
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax+8], -1150833019	; bb67ae85H

; 50   :     ctx->state[2] = 0x3C6EF372;

	mov	eax, 4
	shl	eax, 1
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax+8], 1013904242	; 3c6ef372H

; 51   :     ctx->state[3] = 0xA54FF53A;

	mov	eax, 4
	imul	ecx, eax, 3
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+ecx+8], -1521486534	; a54ff53aH

; 52   :     ctx->state[4] = 0x510E527F;

	mov	eax, 4
	shl	eax, 2
	mov	ecx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [ecx+eax+8], 1359893119	; 510e527fH

; 53   :     ctx->state[5] = 0x9B05688C;

	mov	eax, 4
	imul	ecx, eax, 5
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+ecx+8], -1694144372	; 9b05688cH

; 54   :     ctx->state[6] = 0x1F83D9AB;

	mov	eax, 4
	imul	ecx, eax, 6
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+ecx+8], 528734635	; 1f83d9abH

; 55   :     ctx->state[7] = 0x5BE0CD19;

	mov	eax, 4
	imul	ecx, eax, 7
	mov	edx, DWORD PTR _ctx$[ebp]
	mov	DWORD PTR [edx+ecx+8], 1541459225	; 5be0cd19H

; 56   : }

	pop	edi
	pop	esi
	pop	ebx
	mov	esp, ebp
	pop	ebp
	ret	0
?sha256_starts@@YAXPAUsha256_context@@@Z ENDP		; sha256_starts
_TEXT	ENDS
END
